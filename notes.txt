/* 
https://stackoverflow.com/questions/76187282/react-resizeobserver-loop-completed-with-undelivered-notifications

this is a total hack from what i hear. When long text is in headers field and i resise
and shrink/expand the text i get a big error but the app is still working if you just
close the error. 

They say:
If you aren't using ResizeObserver in your code, you shouldn't worry about it, it will 
not appear in build version of your app.

If you are using ResizeObserver check this to get a better understanding of the causes 
of the error Observation Errors:
*/
/* doesn't actually work :( 
  iframe#webpack-dev-server-client-overlay { 
    display: none !important
}  */

after a build; 
  serve -s build


Installs:
    Material:
        npm install @mui/material @emotion/react @emotion/styled
    Icons: 
        npm install @mui/icons-material




cREST when word wrapping:
    <pre id="entity-pre" style="padding-top: 0px;" class=" language-http">
    <code id="entity-code" class=" language-http" style="white-space: pre-wrap; overflow-wrap: break-word;">

<pre id="entity-pre" style="padding-top: 0px;" class="line-numbers language-http">
    <code id="entity-code" class="language-http">

code[class*="language-"], pre[class*="language-"]
    color: black;
    background: none;
    text-shadow: white 0px 1px;
    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    overflow-wrap: normal;
    line-height: 1.5;
    tab-size: 4;
    hyphens: none;


        if(settings.wordWrap) {
            this.entityCode.style['white-space'] = 'pre-wrap';
            this.entityCode.style['word-wrap'] = 'break-word';
            //this.entityCode.style['word-break'] = 'normal';
        } else {
            this.grabScroll = new GrabScroll(this.entityPre, this.inputs);
        }
        
        //some docs on prism
        //https://prismjs.com/extending.html#api
        if(settings.prettyPrint) {
            Prism.highlightElement(this.entityCode);
        } else {
            //put our own 'language-' class so prism styles still apply even if we don't color code
            //this is main so text doesn't overflow which is what happens when i don't do this.
            this.entityPre.classList.add('language-none');
            //this.entityCode.classList.add('language-none');
        }

settings update with darkmode & drawer state persisted